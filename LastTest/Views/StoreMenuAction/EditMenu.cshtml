@model LastTest.Menu

@{
    ViewBag.Title = "EditMenu";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm("EditMenu", "StoreMenuAction", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
        <div class="card">
            <div class="card-header" data-background-color="purple">
                <h4 class="category" style="text-align: center">Sửa thông tin thức uống</h4>
            </div>
            <div class="row" style="padding-left: 30px">
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2", style = "padding-top:12px; font-size:14px" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2", style = "padding-top:12px; font-size:14px" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.OfferPercent, htmlAttributes: new { @class = "control-label col-md-2", style = "padding-top:12px; font-size:14px" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.OfferPercent, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OfferPercent, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Selled, htmlAttributes: new { @class = "control-label col-md-2", style = "padding-top:12px; font-size:14px" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Selled, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Selled, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2", style = "padding-top:25px; font-size:14px" })
                    <div class="col-md-10">
                        <span class="btn btn-rose btn-round btn-primary">
                            <span id="text-file">Chọn ảnh</span>
                            <input class="btn btn-primary" type="file" name="file" id="file" onchange="loadFile(event)" />
                            @Html.HiddenFor(model => model.Image)
                            @Html.ValidationMessageFor(model => model.Image, "", new {@class = "text-danger"})
                            <div class="ripple-container"></div>
                        </span>
                        <img id="output" style="width: 100px; height: 100px; border-radius: 5px" src="~/Content/placeholder.jpg" />
                        <script>
                            var loadFile = function (event) {
                                var output = document.getElementById('output');
                                output.src = URL.createObjectURL(event.target.files[0]);
                            };
                        </script>
                    </div>
                </div>
            </div>
            <div class="form-group clear-fix">
                <div class="col-md-6">
                    <input class="btn btn-primary pull-right" type="submit" value="Lưu" />
                </div>
                <div class="col-md-6">
                    <a class="pull-left btn btn-info" href="@Url.Action("GetListStore", "StoreMenuAction")">Quay lại</a>
                </div>
            </div>
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
