@model LastTest.Store

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>EditStore</title>
    @*@Html.Partial("Script")*@
    
</head>
<body>
    @using (Html.BeginForm("EditStore", "StoreAction", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
    <div class="card">
        <div class="card-header" data-background-color="purple">
            <h4 class="title" style="text-align: center">Edit Store</h4>
        </div>
        <div class="row" style="padding-left: 30px">
            <div class="col-md-6">
                <div class="form-group label-floating">
                    <label class="control-label">Tên quán</label>
                    @Html.EditorFor(model => model.NameStore, new {htmlAttributes = new {@class = "form-control"}})
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group label-floating">
                    <label class="control-label">Địa chỉ</label>
                    @Html.EditorFor(model => model.Address, new {htmlAttributes = new {@class = "form-control"}})
                </div>
            </div>
            
            
            <div class="col-md-6">
                <div class="form-group label-floating">
                    <label class="control-label">Latitude</label>
                    @Html.EditorFor(model => model.Latitude, new {htmlAttributes = new {@class = "form-control"}})
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group label-floating">
                    <label class="control-label">Longtitude</label>
                    @Html.EditorFor(model => model.Longtitude, new {htmlAttributes = new {@class = "form-control"}})
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group label-floating">
                    <label class="control-label">Mobile</label>
                    @Html.EditorFor(model => model.Mobile, new {htmlAttributes = new {@class = "form-control"}})
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group label-floating">
                    @*<label class="control-label">Cover</label>
                @Html.EditorFor(model => model.Cover, new {htmlAttributes = new {@class = "form-control"}})*@
                    <span class="btn btn-rose btn-round btn-primary">
                        <span id="text-file">Chọn Avatar</span>
                        <input class="btn btn-primary" type="file" name="file" id="file" onchange="loadFile(event)" />
                        @Html.HiddenFor(model => model.Avatar)
                        @*@Html.EditorFor(model => model.Avatar, new { htmlAttributes = new { @class="btn btn-danger",@type="file",@name="file" } })*@
                        @Html.ValidationMessageFor(model => model.Avatar, "", new {@class = "text-danger"})
                        <div class="ripple-container"></div>
                    </span>
                    <img id="output" style="width: 100px; height: 100px; border-radius: 5px" src="~/Content/placeholder.jpg" />
                    <script>
                            var loadFile = function (event) {
                                var output = document.getElementById('output');
                                output.src = URL.createObjectURL(event.target.files[0]);
                            };
                    </script>
                    <span class="btn btn-rose btn-round btn-primary">
                        <span id="text-cover">Chọn Cover</span>
                        <input class="btn btn-primary" type="file" name="cover" id="cover" onchange="loadCover(event)" />
                        @Html.HiddenFor(model => model.Cover)
                        @*@Html.EditorFor(model => model.Cover, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.ValidationMessageFor(model => model.Cover, "", new {@class = "text-danger"})
                        <div class="ripple-container"></div>
                    </span>
                    <img id="output1" style="width: 100px;height: 100px; border-radius: 5px" src="~/Content/placeholder.jpg" />
                    <script>
                        var loadCover = function (event) {
                            var output = document.getElementById('output1');
                            output.src = URL.createObjectURL(event.target.files[0]);
                        };
                    </script>

                </div>

            </div>

        </div>
        <div class="form-group clearfix">
            <div class="col-md-6 ">
                <input class="btn btn-primary pull-right" type="submit" value="Save User" />
            </div>
            <div class="col-md-6">
                <a class="pull-left btn btn-info" href="@Url.Action("StoreDetails", "StoreAction")">Back</a>
            </div>
        </div>
        
    </div>
    }
    
    
</body>
</html>
